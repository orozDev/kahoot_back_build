{"version":3,"file":"titles.storage.js","sourceRoot":"","sources":["../../../src/multi-lang/titles.storage.ts"],"names":[],"mappings":"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","sourcesContent":["import { getGlobal } from '../utils/get-global.util';\n\ninterface ClassValidatorTitle {\n  target: object;\n  titles: Map<string | symbol, string>;\n}\n\ninterface ClassValidatorPropertyTitle {\n  target: object;\n  titles: Map<string | symbol, string>;\n}\n\nconst CLASS_VALIDATOR_PROPERTY_TITLES = 'CLASS_VALIDATOR_PROPERTY_TITLES';\n\nconst CLASS_VALIDATOR_TITLES = 'CLASS_VALIDATOR_TITLES';\nconst CLASS_VALIDATOR_ROOT_TITLE = 'CLASS_VALIDATOR_ROOT_TITLE';\n\n// PROPERTY\nexport function getClassValidatorPropertyTitlesStorage(): ClassValidatorPropertyTitle[] {\n  const global: { [CLASS_VALIDATOR_PROPERTY_TITLES]: ClassValidatorPropertyTitle[] } = getGlobal();\n  if (!global[CLASS_VALIDATOR_PROPERTY_TITLES]) {\n    global[CLASS_VALIDATOR_PROPERTY_TITLES] = [];\n  }\n  return global[CLASS_VALIDATOR_PROPERTY_TITLES];\n}\n\nexport function setClassValidatorPropertyTitle(object: object, propertyName: string | symbol, title: string) {\n  const storagePropertyTitle = getClassValidatorPropertyTitlesStorage();\n  let obj: ClassValidatorPropertyTitle | undefined = storagePropertyTitle.find(o => o.target === object.constructor);\n  if (!obj) {\n    obj = { target: object.constructor, titles: new Map() };\n    storagePropertyTitle.push(obj);\n  }\n  obj.titles.set(propertyName, title);\n}\n\nexport function getClassValidatorPropertyTitles(object: object): ClassValidatorPropertyTitle['titles'] {\n  const storagePropertyTitle = getClassValidatorPropertyTitlesStorage();\n  const obj: ClassValidatorPropertyTitle | undefined = storagePropertyTitle.find(o => o.target === object.constructor);\n  if (!obj) {\n    return new Map();\n  }\n  return obj.titles;\n}\n\nexport function getClassValidatorPropertyTitle(object: object, propertyName: string): string | undefined {\n  const titles = getClassValidatorPropertyTitles(object);\n  return titles.get(propertyName);\n}\n\n// CLASS\nexport function getClassValidatorTitlesStorage(): ClassValidatorTitle[] {\n  const global: { [CLASS_VALIDATOR_TITLES]: ClassValidatorTitle[] } = getGlobal();\n  if (!global[CLASS_VALIDATOR_TITLES]) {\n    global[CLASS_VALIDATOR_TITLES] = [];\n  }\n  return global[CLASS_VALIDATOR_TITLES];\n}\n\nexport function setClassValidatorTitle(object: object, propertyName: string | undefined, title: string) {\n  const storageTitle = getClassValidatorTitlesStorage();\n  let obj: ClassValidatorTitle | undefined = storageTitle.find(o => o.target === object);\n  if (!obj) {\n    obj = { target: object, titles: new Map() };\n    storageTitle.push(obj);\n  }\n\n  obj.titles.set(propertyName || CLASS_VALIDATOR_ROOT_TITLE, title);\n}\n\nexport function getClassValidatorTitles(object: object): ClassValidatorTitle['titles'] {\n  const storageTitle = getClassValidatorTitlesStorage();\n  const obj: ClassValidatorTitle | undefined = storageTitle.find(o => o.target === object.constructor);\n  if (!obj) {\n    return new Map();\n  }\n  return obj.titles;\n}\n\nexport function getClassValidatorTitle(object: object, propertyName: string | symbol | undefined): string | undefined {\n  const titles = getClassValidatorTitles(object);\n  return titles.get(propertyName || CLASS_VALIDATOR_ROOT_TITLE);\n}\n"]}