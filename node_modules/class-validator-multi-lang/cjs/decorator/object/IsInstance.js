"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsInstance = exports.isInstance = exports.IS_INSTANCE = void 0;
const ValidateBy_1 = require("../common/ValidateBy");
const multi_lang_1 = require("../../multi-lang");
exports.IS_INSTANCE = 'isInstance';
/**
 * Checks if the value is an instance of the specified object.
 */
function isInstance(object, targetTypeConstructor) {
    return (targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor);
}
exports.isInstance = isInstance;
/**
 * Checks if the value is an instance of the specified object.
 */
function IsInstance(targetType, validationOptions) {
    return (0, ValidateBy_1.ValidateBy)({
        name: exports.IS_INSTANCE,
        constraints: [targetType],
        validator: {
            validate: (value, args) => isInstance(value, args.constraints[0]),
            defaultMessage: (0, ValidateBy_1.buildMessage)((eachPrefix, args) => {
                if (args.constraints[0]) {
                    return (eachPrefix +
                        (0, multi_lang_1.getText)(`$property must be an instance of $constraint1name`).replace('$constraint1name', (args && args.constraints && args.constraints[0].name)));
                }
                else {
                    return (eachPrefix +
                        (0, multi_lang_1.getText)(`$IS_INSTANCE decorator expects and object as value, but got falsy value.`).replace('$IS_INSTANCE', exports.IS_INSTANCE));
                }
            }, validationOptions),
        },
    }, validationOptions);
}
exports.IsInstance = IsInstance;
//# sourceMappingURL=IsInstance.js.map